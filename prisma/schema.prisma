generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(uuid()) @db.VarChar(255)
  name             String   @db.VarChar(255)
  cpf              String   @db.VarChar(255)
  phone            String   @db.VarChar(255)
  email            String   @db.VarChar(255)
  password         String   @db.VarChar(255)
  department       String   @db.VarChar(255)
  birthDate        DateTime @db.Timestamptz
  isHumanResources Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  schedule     Schedule[]     @relation("FK_Schedule_User_UserId")
  code         Code[]         @relation("FK_Code_User_UserId")
  refreshToken RefreshToken[] @relation("FK_RefreshToken_User_UserId")
}

model RefreshToken {
  id        String   @id @default(uuid()) @db.VarChar(255)
  userId    String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation("FK_RefreshToken_User_UserId", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Schedule {
  id        String   @id @default(uuid()) @db.VarChar(255)
  entry     DateTime @db.Timestamptz
  exit      DateTime @db.Timestamptz
  userId    String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation("FK_Schedule_User_UserId", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Code {
  id        String   @id @default(uuid()) @db.VarChar(255)
  userId    String   @db.VarChar(255)
  code      String   @db.VarChar(255)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  active    Boolean  @default(true)

  user User @relation("FK_Code_User_UserId", fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}
